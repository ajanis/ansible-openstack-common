- name: Install haproxy
  hosts: openstack_haproxy
  become: True
  gather_facts: True
  tasks:
    - include_role:
        name: openstack
        tasks_from: common.yml
    - include_role:
        name: haproxy-server
  vars:
    haproxy_service_configs:
      - service:
          haproxy_service_name: galera
          haproxy_backend_nodes: "{{ [groups['openstack_mysql'][0]] | default([]) }}"  # list expected
          #haproxy_backup_nodes: "{{ groups['openstack_mysql'][1:] | default([]) }}"
          haproxy_bind: "{{ [internal_lb_vip_address] }}"
          haproxy_port: 3306
          haproxy_check_port: 9200
          haproxy_balance_type: tcp
          haproxy_timeout_client: 5000s
          haproxy_timeout_server: 5000s
          haproxy_backend_options:
            - "httpchk HEAD /"
          #haproxy_whitelist_networks: "{{ haproxy_galera_whitelist_networks }}"
      - service:
          haproxy_service_name: glance_api
          haproxy_backend_nodes: "{{ groups['openstack_glance'] | default([]) }}"
          haproxy_ssl: "{{ haproxy_ssl }}"
          haproxy_port: 9292
          haproxy_balance_type: http
          haproxy_backend_options:
            - "httpchk /healthcheck"
      - service:
          haproxy_service_name: glance_registry
          haproxy_backend_nodes: "{{ groups['openstack_glance'] | default([]) }}"
          haproxy_ssl: "{{ haproxy_ssl }}"
          haproxy_port: 9191
          haproxy_balance_type: http
          haproxy_backend_options:
            - "httpchk /healthcheck"
          #haproxy_whitelist_networks: "{{ haproxy_glance_registry_whitelist_networks }}"
      - service:
          haproxy_service_name: keystone_service
          haproxy_backend_nodes: "{{ groups['openstack_keystone'] | default([])  }}"
          haproxy_port: 5000
          haproxy_ssl: "{{ haproxy_ssl }}"
          haproxy_balance_type: "http"
          haproxy_backend_options:
            - "httpchk HEAD /"
      - service:
          haproxy_service_name: keystone_admin
          haproxy_backend_nodes: "{{ groups['openstack_keystone'] | default([])  }}"
          haproxy_port: 35357
          haproxy_ssl: "{{ haproxy_ssl }}"
          haproxy_balance_type: "http"
          haproxy_backend_options:
            - "httpchk HEAD /"
         # haproxy_whitelist_networks: "{{ haproxy_keystone_admin_whitelist_networks }}"
      - service:
          haproxy_service_name: neutron_server
          haproxy_backend_nodes: "{{ groups['openstack_neutron'] | default([]) }}"
          haproxy_port: 9696
          haproxy_ssl: "{{ haproxy_ssl }}"
          haproxy_balance_type: http
          haproxy_backend_options:
            - "httpchk GET /"
      - service:
          haproxy_service_name: nova_api_metadata
          haproxy_backend_nodes: "{{ groups['openstack_compute_infrastructure'] | default([]) }}"
          haproxy_port: 8775
          haproxy_ssl: "{{ haproxy_ssl }}"
          haproxy_balance_type: http
          haproxy_backend_options:
            - "httpchk HEAD /"
          #haproxy_whitelist_networks: "{{ haproxy_nova_metadata_whitelist_networks }}"
      - service:
          haproxy_service_name: nova_api_os_compute
          haproxy_backend_nodes: "{{ groups['openstack_compute_infrastructure'] | default([]) }}"
          haproxy_ssl: "{{ haproxy_ssl }}"
          haproxy_port: 8774
          haproxy_balance_type: http
          haproxy_backend_options:
            - "httpchk HEAD /"
      - service:
          haproxy_service_name: nova_api_placement
          haproxy_backend_nodes: "{{ groups['openstack_compute_infrastructure'] | default([]) }}"
          haproxy_ssl: "{{ haproxy_ssl }}"
          haproxy_port: 8778
          haproxy_balance_type: http
          haproxy_backend_options:
            - "httpchk HEAD /"
          haproxy_backend_httpcheck_options:
            - "expect status 401"
      - service:
          haproxy_service_name: nova_console
          haproxy_backend_nodes: "{{ groups['openstack_compute_infrastructure'] | default([]) }}"
          haproxy_ssl: "{{ haproxy_ssl }}"
          haproxy_port: 6080
          haproxy_balance_type: http
          haproxy_timeout_client: 60m
          haproxy_timeout_server: 60m
          haproxy_balance_alg: source
          haproxy_backend_options:
            - "httpchk HEAD /"
          haproxy_backend_httpcheck_options:
            - "expect status 404"
      - service:
          haproxy_service_name: horizon
          haproxy_backend_nodes: "{{ groups['openstack_dashboard'] | default([]) }}"
          haproxy_ssl: "{{ haproxy_ssl }}"
          haproxy_ssl_all_vips: true
          haproxy_port: "{{ haproxy_ssl | ternary(443,80) }}"
          haproxy_backend_port: 80
          haproxy_redirect_http_port: 80
          haproxy_balance_type: http
          haproxy_balance_alg: source
          haproxy_backend_options:
            - "httpchk HEAD /"
      - service:
          haproxy_service_name: rabbitmq_mgmt
          haproxy_backend_nodes: "{{ groups['openstack_rabbitmq'] | default([]) }}"
          haproxy_ssl: "{{ haproxy_ssl }}"
          haproxy_port: 15672
          haproxy_balance_type: http
          haproxy_backend_options:
            - "httpchk HEAD /"
          #haproxy_whitelist_networks: "{{ haproxy_rabbitmq_management_whitelist_networks }}"
